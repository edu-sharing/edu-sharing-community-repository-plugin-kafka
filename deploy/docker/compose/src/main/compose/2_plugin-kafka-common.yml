version: '3.7'

services:

#  zookeeper:
#    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-zookeeper:${docker.tag}"
#    expose:
#      - '2181'
#    environment:
#      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-kafka:${docker.tag}"
    expose:
      - '9092'
      - '9093'
      - '9094'
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: "CLIENT://:9092,EXTERNAL://:9093, CONTROLLER://:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://kafka:9092,EXTERNAL://${KAFKA_HOST:-localhost}:${KAFKA_EXTERNAL_PORT:-9093}"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "CLIENT"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@127.0.0.1:9094"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      #KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
    ports:
      - "${COMMON_BIND_HOST:-127.0.0.1}:${KAFKA_EXTERNAL_PORT:-9093}:9093"
#    depends_on:
#      - zookeeper

  # todo
  kafka-consumer-client:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-kafka:${docker.tag}"
    command: /opt/bitnami/kafka/bin/kafka-console-consumer.sh --topic notification --from-beginning --bootstrap-server kafka:9092
    depends_on:
      - kafka

  notification-manager:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-notification-manager:${docker.tag}"
    command:
      - -Xms${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMS:-512m}
      - -Xmx${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMX:-512m}
      - -Dcom.sun.management.jmxremote
      - -Dcom.sun.management.jmxremote.authenticate=false
      - -Dcom.sun.management.jmxremote.port=7199
      - -Dcom.sun.management.jmxremote.ssl=false
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}"
      SPRING_DATA_MONGODB_DATABASE: "${REPOSITORY_MONGO_DATABASE:-edu-sharing}"
      SPRING_DATA_MONGODB_URI: "${REPOSITORY_MONGO_CONNECTION_STRING:-mongodb://repository:repository@repository-mongo-primary:27017,repository-mongo-secondary:27017/edu-sharing}"
    expose:
      - "8080"
    depends_on:
      - kafka

  email-notifier:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-email-notifier:${docker.tag}"
    command:
      - -Xms${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMS:-512m}
      - -Xmx${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMX:-512m}
      - -Dcom.sun.management.jmxremote
      - -Dcom.sun.management.jmxremote.authenticate=false
      - -Dcom.sun.management.jmxremote.port=7199
      - -Dcom.sun.management.jmxremote.ssl=false
    environment:
      SERVER_PORT: "8080"
      MAIL_SETTINGS_FROM: "noreply@edu-sharing.com"
      KAFKA_TOPICS_NOTIFICATION: "notification"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}"
      SPRING_DATA_MONGODB_DATABASE: "${REPOSITORY_MONGO_DATABASE:-edu-sharing}"
      SPRING_DATA_MONGODB_URI: "${REPOSITORY_MONGO_CONNECTION_STRING:-mongodb://repository:repository@repository-mongo-primary:27017,repository-mongo-secondary:27017/edu-sharing}"
      SPRING_MAIL_HOST: "repository-mailcatcher"
      SPRING_MAIL_PORT: "1025"
      SPRING_MAIL_USERNAME: "user"
      SPRING_MAIL_PASSWORD: "password"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "false"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
    expose:
      - "8080"
    depends_on:
      - kafka

  mongodb-kafka-connector:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-mongdb-kafka-connector:${docker.tag}"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}"
      KAFKA_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      KAFKA_KEY_CONVERTER_SCHEMA_ENABLED: "false"
      KAFKA_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      KAFKA_VALUE_CONVERTER_SCHEMA_ENABLED: "false"
      KAFKA_OFFSET_FLUSH_INTERVAL_MS: "10000"
      KAFKA_TOPICS: "${KAFKA_TOPICS:-notification}"
      MONGODB_CONNECTION_STRING: "${REPOSITORY_MONGO_CONNECTION_STRING:-mongodb://repository:repository@repository-mongo-primary:27017,repository-mongo-secondary:27017/edu-sharing}"
      MONGODB_DATABASE: "${REPOSITORY_MONGO_DATABASE:-edu-sharing}"
      MONGODB_COLLECTION: "${REPOSITORY_MONGO_NOTIFICATION_COLLECTION:-Notification}"
      MONGODB_DOCUMENT_ID_STRATEGY: "${REPOSITORY_MONGO_NOTIFICATION_DOCUMENT_ID_STRATEGY:-com.mongodb.kafka.connect.sink.processor.id.strategy.UuidProvidedInValueStrategy}"
    depends_on:
      - kafka
#
#
#  repository-mongo-primary:
#    image: "bitnami/mongodb:4.4.15" # TODO
#    environment:
#      ALLOW_EMPTY_PASSWORD: "false"
#      MONGODB_ADVERTISED_HOSTNAME: "repository-mongo-primary"
#      MONGODB_REPLICA_SET_MODE: "primary"
#      MONGODB_DATABASE: "${REPOSITORY_MONGO_DATABASE:-edu-sharing}"
#      MONGODB_USERNAME: "${REPOSITORY_MONGO_USER:-repository}"
#      MONGODB_PASSWORD: "${REPOSITORY_MONGO_PASS:-repository}"
#      MONGODB_ROOT_USER: "${REPOSITORY_MONGO_ROOT_USER:-root}"
#      MONGODB_ROOT_PASSWORD: "${REPOSITORY_MONGO_ROOT_PASS:-root}"
#      MONGODB_REPLICA_SET_KEY: "${REPOSITORY_MONGO_REPLICATION_SET_KEY:-repository}"
#    expose:
#      - "27017"
#    volumes:
#      - "repository-mongo-volume-data-primary:/bitnami/mongodb"
#
#  repository-mongo-secondary:
#    image: "bitnami/mongodb:4.4.15" # TODO
#    depends_on:
#      - repository-mongo-primary
#    environment:
#      MONGODB_ADVERTISED_HOSTNAME: "repository-mongo-secondary"
#      MONGODB_REPLICA_SET_MODE: "secondary"
#      MONGODB_INITIAL_PRIMARY_HOST: "repository-mongo-primary"
#      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: "27017"
#      MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: "${REPOSITORY_MONGO_ROOT_PASS:-root}"
#      MONGODB_REPLICA_SET_KEY: "${REPOSITORY_MONGO_REPLICATION_SET_KEY:-repository}"
#    expose:
#      - "27017"
#    volumes:
#      - "repository-mongo-volume-data-secondary:/bitnami/mongodb"
#
#  repository-mongo-arbiter:
#    image: "bitnami/mongodb:4.4.15" # TODO
#    depends_on:
#      - repository-mongo-primary
#    environment:
#      MONGODB_ADVERTISED_HOSTNAME: "repository-mongo-arbiter"
#      MONGODB_REPLICA_SET_MODE: "arbiter"
#      MONGODB_INITIAL_PRIMARY_HOST: "repository-mongo-primary"
#      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: "27017"
#      MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: "${REPOSITORY_MONGO_ROOT_PASS:-root}"
#      MONGODB_REPLICA_SET_KEY: "${REPOSITORY_MONGO_REPLICATION_SET_KEY:-repository}"
#    expose:
#        - "27017"
#
#volumes:
#  repository-mongo-volume-data-primary:
#  repository-mongo-volume-data-secondary: