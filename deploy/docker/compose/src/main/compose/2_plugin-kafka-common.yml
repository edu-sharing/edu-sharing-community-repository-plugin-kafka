version: '3.7'

services:

  kafka:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-kafka:${docker.tag}"
    expose:
      - '9092'
      - '9093'
      - '9094'
    volumes:
      - kafka-data-volume:/bitnami
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: "CLIENT://:9092,EXTERNAL://:9093, CONTROLLER://:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://kafka:9092,EXTERNAL://${KAFKA_HOST:-localhost}:${KAFKA_EXTERNAL_PORT:-9093}"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "CLIENT"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@127.0.0.1:9094"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "${COMMON_BIND_HOST:-127.0.0.1}:${KAFKA_EXTERNAL_PORT:-9093}:9093"

  # todo
  kafka-consumer-client:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-kafka:${docker.tag}"
    command: /opt/bitnami/kafka/bin/kafka-console-consumer.sh --topic notification --from-beginning --bootstrap-server kafka:9092
    depends_on:
      - kafka


  email-notifier:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-email-notifier:${docker.tag}"
    command:
      - -Xms${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMS:-512m}
      - -Xmx${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMX:-512m}
      - -Dcom.sun.management.jmxremote
      - -Dcom.sun.management.jmxremote.authenticate=false
      - -Dcom.sun.management.jmxremote.port=7199
      - -Dcom.sun.management.jmxremote.ssl=false
    environment:
      SERVER_PORT: "8080"
      MAIL_SETTINGS_FROM: "noreply@edu-sharing.com"
      KAFKA_TOPICS_NOTIFICATION: "notification"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_MAIL_HOST: "repository-mailcatcher"
      SPRING_MAIL_PORT: "1025"
      SPRING_MAIL_USERNAME: "user"
      SPRING_MAIL_PASSWORD: "password"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "false"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
    expose:
      - "8080"
    depends_on:
      - kafka

  notification-db:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-mongo:${docker.tag}"
    environment:
      ALLOW_EMPTY_PASSWORD: "false"
      MONGODB_ADVERTISED_HOSTNAME: "notification-db"
      MONGODB_REPLICA_SET_MODE: "primary"
      MONGODB_DATABASE: "${NOTIFICATION_DATABASE_NAME:-notification}"
      MONGODB_USERNAME: "${NOTIFICATION_DATABASE_USER:-notification}"
      MONGODB_PASSWORD: "${NOTIFICATION_DATABASE_PASS:-notification}"
      MONGODB_ROOT_USER: "${NOTIFICATION_DATABASE_ROOT_USER:-root}"
      MONGODB_ROOT_PASSWORD: "${NOTIFICATION_DATABASE_ROOT_PASS:-root}"
      MONGODB_REPLICA_SET_KEY: "${NOTIFICATION_DATABASE_REPLICATION_SET_KEY:-notification}"
    expose:
      - "27017"
    volumes:
      - "notification-db-volume-data:/bitnami/mongodb"

  notification-manager:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-notification-manager:${docker.tag}"
    command:
      - -Xms${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMS:-512m}
      - -Xmx${REPOSITORY_SEARCH_ELASTIC_TRACKER_JAVA_XMX:-512m}
      - -Dcom.sun.management.jmxremote
      - -Dcom.sun.management.jmxremote.authenticate=false
      - -Dcom.sun.management.jmxremote.port=7199
      - -Dcom.sun.management.jmxremote.ssl=false
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_DATA_MONGODB_DATABASE: "${NOTIFICATION_DATABASE_NAME:-notification}"
      REPOSITORY_MONGO_CONNECTION_STRING: "mongodb://${NOTIFICATION_DATABASE_USER:-notification}:${NOTIFICATION_DATABASE_PASS:-notification}@notification-db:27017/${NOTIFICATION_DATABASE_NAME:-notification}"

    expose:
      - "8080"
    depends_on:
      - kafka
    ports:
      - "${COMMON_BIND_HOST:-127.0.0.1}:8700:8080"

  mongodb-kafka-connector:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-mongdb-kafka-connector:${docker.tag}"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      KAFKA_KEY_CONVERTER_SCHEMA_ENABLED: "false"
      KAFKA_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      KAFKA_VALUE_CONVERTER_SCHEMA_ENABLED: "false"
      KAFKA_OFFSET_FLUSH_INTERVAL_MS: "10000"
      KAFKA_TOPICS: "notification"
      MONGODB_CONNECTION_STRING: "mongodb://${NOTIFICATION_DATABASE_USER:-notification}:${NOTIFICATION_DATABASE_PASS:-notification}@notification-db:27017/${NOTIFICATION_DATABASE_NAME:-notification}"
      MONGODB_DATABASE: "${NOTIFICATION_DATABASE_NAME:-notification}"
      MONGODB_COLLECTION: "Notification"
      MONGODB_DOCUMENT_ID_STRATEGY: "${REPOSITORY_MONGO_NOTIFICATION_DOCUMENT_ID_STRATEGY:-com.mongodb.kafka.connect.sink.processor.id.strategy.UuidProvidedInValueStrategy}"
    depends_on:
      - kafka

volumes:
  kafka-data-volume:
  notification-db-volume-data: